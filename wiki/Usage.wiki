#summary How to use JSDot inside an html page

= Usage =

To include a JSDot graph into your page follow these simple steps. All the necessary files are included in distributed zip file.

Copy the files in a structure like the following one:
{{{
scripts/jquery-1.4.2.js
jquery-ui-1.8.2.custom.min.js
scripts/jsdot-min.js
style/ui-lightness/*
style/jsdot/editor.css
style/jsdot/shapes.css
shapes.svg
mygraph.html
}}}

Where `mygraph.html` is the document where you want to put the graph. Notice that, whereas you are free to change the directories of the script and css (provided you change accordingly the links below), the file `shapes.svg` must always be in the same directory as your html document! (see [ Issue 9 ])

And add to the heading of your html document the necessary links:
{{{
<head>
    <link type="text/css" rel="stylesheet" href="style/ui-lightness/jquery-ui-1.8.2.custom.css"/>
    <link type="text/css" rel="stylesheet" href="style/jsdot/shapes.css"/>
    <link type="text/css" rel="stylesheet" href="style/jsdot/editor.css"/>
    <script type="text/javascript" src="scripts/jquery-1.4.2.js"></script>
    <script type="text/javascript" src="scripts/jquery-ui-1.8.2.custom.min.js"></script>
    <script type="text/javascript" src="scripts/jsdot-min.js"></script>
    ...
</head>
}}}

The `style/ui-lightness` directory contains a [http://jqueryui.com JQuery theme], which can be substituted with your own just by changing the included css.

Now you need to define a place where the graph will be drawn, and draw it!
{{{
<html>
<head>
    ...
    <script type="text/javascript">
        function load() {
            JSDot("mygraph", {mode: "view", json: '{nodes:[{name:"n1"}]}'});
        }
    </script>
</head>
<body onload="load()">
    ...
    <div id="mygraph"></div>
    ...
</body>
}}}

== View-only ==
If you do not need the editor but only want to visualise the graphs, and you want to minimise dependencies, here is the minimal setup.